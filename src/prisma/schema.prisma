generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName      String
  username      String    @unique
  avatar        String? 
  email         String?   @unique
  phone         String?   @unique
  password      String
  posts         Post[]
  comments      Comment[]
  likes         Like[]
  followedBy    User[]    @relation("UserFollows", fields: [followedByIDs], references: [id])
  followedByIDs String[]  @db.ObjectId
  following     User[]    @relation("UserFollows", fields: [followingIDs], references: [id])
  followingIDs  String[]  @db.ObjectId
  createdAt     DateTime  @default(now())
  refreshTokens  RefreshToken[] @relation("UserRefreshTokens")
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  userId    String   @db.ObjectId
  user      User     @relation("UserRefreshTokens", fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Post {
   id        String   @id @default(auto()) @map("_id") @db.ObjectId
  file      String   // URL of the file in S3
  caption   String?
  location  String?
  private   Boolean  @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
}
