### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

type Comment {
  author: User!
  content: String
  createdAt: DateTime!
  id: ID
  post: Post!
}

type Conversation {
  id: ID!
  lastActivityAt: DateTime!
  lastMessage: Message
  messages: [Message!]!
  participants: [User!]!
  participantsId: [String!]!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Like {
  createdAt: DateTime!
  id: ID
  post: Post!
  user: User!
}

type Message {
  content: String!
  conversation: Conversation!
  conversationId: String!
  createdAt: DateTime!
  id: ID!
  lastMessage: Conversation
  readBy: [String!]!
  senderId: String!
}

type MessageConnection {
  hasMore: Boolean
  messages: [Message]
}

type Mutation {
  createPost(caption: String, file: Upload!, isPrivate: Boolean, location: String): Post
  createStory(caption: String, file: Upload!, hashTag: [String], location: String, mentions: [String]): Story
  sendMessage(content: String, receiverId: String): Message
}

type Post {
  author: User!
  caption: String
  comments: [[Comment!]!]
  createdAt: DateTime!
  file: String!
  id: ID!
  isPrivate: Boolean!
  likes: [[Like!]!]
  location: String
  updatedAt: DateTime!
}

type PostConnection {
  hasMore: Boolean
  posts: [Post]
  totalCount: Int
}

type Query {
  conversations: [Conversation]
  getMessages(receiverId: String, skip: Int, take: Int): MessageConnection
  getPosts(skip: Int, take: Int): PostConnection
  getStories(skip: Int, take: Int): StoryConnection
  like(
    """id of like"""
    id: String
  ): Like
  user: User
}

type Story {
  author: User!
  caption: String!
  fileUrl: String!
  hashTag: [String!]!
  id: ID!
  location: String!
  mentions: [String!]!
}

type StoryConnection {
  hasMore: Boolean
  stories: [Story]
  totalCount: Int
}

type Subscription {
  MessageSubscription: Message
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatar: String
  comments: [[Comment!]!]
  createdAt: DateTime!
  email: String
  followedBy: [[User!]!]
  following: [[User!]!]
  fullName: String!
  id: ID!
  likes: [[Like!]!]
  posts: [[Post!]!]
  username: String!
}